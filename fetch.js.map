{"version":3,"sources":["../src/fetch.js"],"names":["_fetch","require","checkStatus","response","status","json","Error","get","url","params","fn1","fn2","promise","http_builder_url","data","indexOf","k","encodeURI","method","credentials","handleFetch","submit","body","options","headers","post","then","catch","err","fetch"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAEA,IAAIA,SAASC,QAAQ,kBAAR,CAAb;AACA,IAAIC,cAAc,SAAdA,WAAc,WAAY;AAC5B,MAAIC,SAASC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,WAAOD,SAASE,IAAT,EAAP;AACD,GAFD,MAEO;AACL,UAAM,IAAIC,KAAJ,EAAN;AACD;AACF,CAND;;AAQA,IAAIC,MAAM,SAANA,GAAM,CAACC,GAAD,EAAMC,MAAN,EAEJ;AAAA,MAFkBC,GAElB,uEAFwB,aAAK,CAClC,CACK;AAAA,MADHC,GACG,uEADG,aAAK,CACb,CAAK;;AACJ,MAAIC,gBAAJ;;AAEA,WAASC,gBAAT,CAA0BL,GAA1B,EAA+BM,IAA/B,EAAqC;AACnC,QAAI,OAAQN,GAAR,IAAgB,WAAhB,IAA+BA,OAAO,IAAtC,IAA8CA,OAAO,EAAzD,EAA6D;AAC3D,aAAO,EAAP;AACD;AACD,QAAI,OAAQM,IAAR,IAAiB,WAAjB,IAAgCA,QAAQ,IAAxC,IAAgD,QAAQA,IAAR,uDAAQA,IAAR,MAAiB,QAArE,EAA+E;AAC7E,aAAO,EAAP;AACD;AACDN,WAAQA,IAAIO,OAAJ,CAAY,GAAZ,KAAoB,CAAC,CAAtB,GAA2B,EAA3B,GAAgC,GAAvC;AACA,SAAK,IAAIC,CAAT,IAAcF,IAAd,EAAoB;AAClBN,aAAO,CAAEA,IAAIO,OAAJ,CAAY,GAAZ,KAAoB,CAAC,CAAtB,GAA2B,GAA3B,GAAiC,EAAlC,IAAwCC,CAAxC,GAA4C,GAA5C,GAAkDC,UAAUH,KAAKE,CAAL,CAAV,CAAzD;AACD;AACD,WAAOR,GAAP;AACD;;AAED,MAAI,OAAOC,MAAP,KAAkB,UAAtB,EAAkC;AAChCG,cAAUZ,OAAOQ,GAAP,EAAY;AACpBU,cAAQ,KADY;AAEpBC,mBAAa;AAFO,KAAZ,CAAV;AAIA,WAAOC,YAAYR,OAAZ,EAAqBH,MAArB,EAA6BC,GAA7B,CAAP;AACD;AACDF,QAAMK,iBAAiBL,GAAjB,EAAsBC,MAAtB,CAAN;AACAG,YAAUZ,OAAOQ,GAAP,EAAY;AACpBU,YAAQ,KADY;AAEpBC,iBAAa;AAFO,GAAZ,CAAV;AAIA,SAAOC,YAAYR,OAAZ,EAAqBF,GAArB,EAA0BC,GAA1B,CAAP;AACD,CAhCD;;AAkCA,IAAIU,SAAS,SAATA,MAAS,CAACb,GAAD,EAAMc,IAAN,EAEP;AAAA,MAFmBZ,GAEnB,uEAFyB,aAAK,CACnC,CACK;AAAA,MADHC,GACG,uEADG,aAAK,CACb,CAAK;;AACJ,MAAIY,UAAU;AACZL,YAAQ,MADI;AAEZC,iBAAa,SAFD;AAGZK,aAAS;AACP,gBAAU,iCADH;AAEP,sBAAgB;AAFT;AAHG,GAAd;AAAA,MAOGZ,gBAPH;AAQA,MAAI,OAAOU,IAAP,KAAgB,UAApB,EAAgC;AAC9BV,cAAUZ,OAAOQ,GAAP,EAAYe,OAAZ,CAAV;AACA,WAAOH,YAAYR,OAAZ,EAAqBU,IAArB,EAA2BZ,GAA3B,CAAP;AACD;AACDa,UAAQ,MAAR,IAAkBD,IAAlB;AACAV,YAAUZ,OAAOQ,GAAP,EAAYe,OAAZ,CAAV;AACA,SAAOH,YAAYR,OAAZ,EAAqBF,GAArB,EAA0BC,GAA1B,CAAP;AACD,CAlBD;;AAoBA,IAAIc,OAAO,SAAPA,IAAO,CAACjB,GAAD,EAAMc,IAAN,EAEL;AAAA,MAFiBZ,GAEjB,uEAFuB,aAAK,CACjC,CACK;AAAA,MADHC,GACG,uEADG,aAAK,CACb,CAAK;;AACJ,MAAIY,UAAU;AACZL,YAAQ,MADI;AAEZC,iBAAa,SAFD;AAGZK,aAAS;AACP,gBAAU,iCADH;AAEP,sBAAgB;AAFT;AAHG,GAAd;AAAA,MAOGZ,gBAPH;AAQA,MAAI,OAAOU,IAAP,KAAgB,UAApB,EAAgC;AAC9BV,cAAUZ,OAAOQ,GAAP,EAAYe,OAAZ,CAAV;AACA,WAAOH,YAAYR,OAAZ,EAAqBU,IAArB,EAA2BZ,GAA3B,CAAP;AACD;AACDa,UAAQ,MAAR,IAAkB,yBAAeD,IAAf,CAAlB;AACAV,YAAUZ,OAAOQ,GAAP,EAAYe,OAAZ,CAAV;AACA,SAAOH,YAAYR,OAAZ,EAAqBF,GAArB,EAA0BC,GAA1B,CAAP;AACD,CAlBD;;AAoBA,IAAIS,cAAc,SAAdA,WAAc,CAACR,OAAD,EAAUF,GAAV,EAAeC,GAAf,EAAuB;AACvC,SAAOC,QACJc,IADI,CACC;AAAA,WAAYxB,YAAYC,QAAZ,CAAZ;AAAA,GADD,EAEJuB,IAFI,CAEC,UAACZ,IAAD,EAAU;AACdJ,QAAII,IAAJ;AACD,GAJI,EAKJa,KALI,CAKE,eAAO;AACZhB,QAAIiB,GAAJ;AACD,GAPI,CAAP;AAQD,CATD;AAUA,IAAIC,QAAQ,EAACtB,QAAD,EAAMkB,UAAN,EAAYJ,cAAZ,EAAZ;kBACeQ,K","file":"fetch.js","sourcesContent":["'use strict';\n\nvar _fetch = require('isomorphic-fetch');\nvar checkStatus = response => {\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    throw new Error();\n  }\n};\n\nvar get = (url, params, fn1 = _ => {\n}, fn2 = _ => {\n}) => {\n  let promise;\n\n  function http_builder_url(url, data) {\n    if (typeof (url) == 'undefined' || url == null || url == '') {\n      return '';\n    }\n    if (typeof (data) == 'undefined' || data == null || typeof (data) != 'object') {\n      return '';\n    }\n    url += (url.indexOf(\"?\") != -1) ? \"\" : \"?\";\n    for (var k in data) {\n      url += ((url.indexOf(\"=\") != -1) ? \"&\" : \"\") + k + \"=\" + encodeURI(data[k]);\n    }\n    return url;\n  }\n\n  if (typeof params === 'function') {\n    promise = _fetch(url, {\n      method: 'get',\n      credentials: 'include'\n    });\n    return handleFetch(promise, params, fn1);\n  }\n  url = http_builder_url(url, params);\n  promise = _fetch(url, {\n    method: 'get',\n    credentials: 'same-origin'\n  });\n  return handleFetch(promise, fn1, fn2);\n};\n\nvar submit = (url, body, fn1 = _ => {\n}, fn2 = _ => {\n}) => {\n  let options = {\n    method: 'post',\n    credentials: 'include',\n    headers: {\n      'Accept': 'application/json; charset=UTF-8',\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n    }\n  }, promise;\n  if (typeof body === 'function') {\n    promise = _fetch(url, options);\n    return handleFetch(promise, body, fn1);\n  }\n  options['body'] = body;\n  promise = _fetch(url, options);\n  return handleFetch(promise, fn1, fn2);\n};\n\nvar post = (url, body, fn1 = _ => {\n}, fn2 = _ => {\n}) => {\n  let options = {\n    method: 'post',\n    credentials: 'include',\n    headers: {\n      'Accept': 'application/json; charset=UTF-8',\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  }, promise;\n  if (typeof body === 'function') {\n    promise = _fetch(url, options);\n    return handleFetch(promise, body, fn1);\n  }\n  options['body'] = JSON.stringify(body);\n  promise = _fetch(url, options);\n  return handleFetch(promise, fn1, fn2);\n};\n\nvar handleFetch = (promise, fn1, fn2) => {\n  return promise\n    .then(response => checkStatus(response))\n    .then((data) => {\n      fn1(data)\n    })\n    .catch(err => {\n      fn2(err)\n    })\n};\nvar fetch = {get, post, submit};\nexport default fetch;"]}